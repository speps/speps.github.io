<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Articles on speps.fr - Rémi Gillig</title>
    <link>http://speps.fr/articles/</link>
    <description>Recent content in Articles on speps.fr - Rémi Gillig</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 26 Nov 2020 22:07:27 +0000</lastBuildDate>
    
	<atom:link href="http://speps.fr/articles/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Torus Trooper - Rebooting a 15 year-old game written in D - Part 4 Final steps</title>
      <link>http://speps.fr/articles/torus-trooper-part4/</link>
      <pubDate>Thu, 26 Nov 2020 22:07:27 +0000</pubDate>
      
      <guid>http://speps.fr/articles/torus-trooper-part4/</guid>
      <description>See also
 Part 1 - Compiling a new executable Part 2 - Running the game for the first time Part 3 - Porting to WebAssembly Part 4 - Final steps  Hooking up keyboard input Remember the interface we made earlier:
1 2 3 4 5 6 7  public interface InputBackend { public void update(); public int getDirState(); public int getButtonState(); public bool getExitState(); public bool getPauseState(); }   Here is the implementation for WebAssembly:</description>
    </item>
    
    <item>
      <title>Torus Trooper - Rebooting a 15 year-old game written in D - Part 3 WebAssembly</title>
      <link>http://speps.fr/articles/torus-trooper-part3/</link>
      <pubDate>Sun, 26 Jul 2020 21:36:11 +0000</pubDate>
      
      <guid>http://speps.fr/articles/torus-trooper-part3/</guid>
      <description>See also
 Part 1 - Compiling a new executable Part 2 - Running the game for the first time Part 3 - Porting to WebAssembly Part 4 - Final steps  Removing GLU dependency GLU is the OpenGL Utility library from SGI. It&amp;rsquo;s an API with helpful functions that work along with OpenGL. In our project, it&amp;rsquo;s used to create a view matrix using gluLookAt. So the fix here is just to copy the code for that method from the original SGI code which has a permissive licence, i.</description>
    </item>
    
    <item>
      <title>Torus Trooper - Rebooting a 15 year-old game written in D - Part 2 Running</title>
      <link>http://speps.fr/articles/torus-trooper-part2/</link>
      <pubDate>Sun, 19 Jul 2020 22:23:30 +0000</pubDate>
      
      <guid>http://speps.fr/articles/torus-trooper-part2/</guid>
      <description>See also
 Part 1 - Compiling a new executable Part 2 - Running the game for the first time Part 3 - Porting to WebAssembly Part 4 - Final steps  From part 1, we stopped after successfully compiling a new executable, but will it run?
Answer is&amp;hellip; NO!
Alright, let&amp;rsquo;s dig into it!
D1&amp;rsquo;s std.file.listdir core.exception.RangeError@src\abagames\tt\barrage.d(110): Range violation ---------------- 0x00448944 in _d_newarrayU 0x0041734B in void abagames.tt.barrage.Barrage.addBml(immutable(char)[], immutable(char)[], float, bool, float) D1 used to have a function named listdir in Phobos.</description>
    </item>
    
    <item>
      <title>Torus Trooper - Rebooting a 15 year-old game written in D - Part 1 Compiling</title>
      <link>http://speps.fr/articles/torus-trooper-part1/</link>
      <pubDate>Sun, 12 Jul 2020 19:46:57 +0000</pubDate>
      
      <guid>http://speps.fr/articles/torus-trooper-part1/</guid>
      <description>See also
 Part 1 - Compiling a new executable Part 2 - Running the game for the first time Part 3 - Porting to WebAssembly Part 4 - Final steps  While exploring D recently, I remembered a game I played while at university 15 years ago. For a long time, I couldn&amp;rsquo;t remember the name at all, only that it was from a Japanese developer. After some search wrangling, I finally managed to find the name of the game: Torus Trooper!</description>
    </item>
    
    <item>
      <title>Setup Hugo with Travis CI and GitHub Pages</title>
      <link>http://speps.fr/articles/hugo-setup/</link>
      <pubDate>Sun, 24 Jan 2016 11:26:57 +0000</pubDate>
      
      <guid>http://speps.fr/articles/hugo-setup/</guid>
      <description>This article aims to introduce and show how to generate your Hugo site on Travis CI and then deploy it automatically to GitHub Pages.
Have your Hugo website ready The first step is to have your Hugo website working locally at least. It should build without errors. The default output folder is public. NOTE: if you changed that using publishdir in your config file please change it in the following steps.</description>
    </item>
    
    <item>
      <title>Debugging a DirectX memory leak</title>
      <link>http://speps.fr/articles/directx-refcount/</link>
      <pubDate>Sat, 10 Aug 2013 21:31:30 +0000</pubDate>
      
      <guid>http://speps.fr/articles/directx-refcount/</guid>
      <description>A short tale (with pictures and code) of a recent debugging session.
DirectX uses reference counting to handle the destruction of its resources. When creating a resource, the handle returned by DirectX already has a reference counter of 1. When this resource is not needed anymore, you call Release, each call decrements the reference counter by 1. However, the memory allocated by DirectX for this resource will only be released when the reference counter reaches 0.</description>
    </item>
    
  </channel>
</rss>